# Dockerfile.nginx - Alternative version using Nginx
# Stage 1: Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Stage 2: Production stage with Nginx
FROM nginx:alpine AS production

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create a non-root user for nginx
RUN addgroup -g 1001 -S reactgroup && \
    adduser -S reactuser -u 1001 -G reactgroup

# Change ownership of nginx html directory
RUN chown -R reactuser:reactgroup /usr/share/nginx/html && \
    chown -R reactuser:reactgroup /var/cache/nginx && \
    chown -R reactuser:reactgroup /var/log/nginx && \
    chown -R reactuser:reactgroup /etc/nginx/conf.d

# Create necessary directories and set permissions
RUN touch /var/run/nginx.pid && \
    chown -R reactuser:reactgroup /var/run/nginx.pid

# Switch to non-root user
USER reactuser

# Expose port
EXPOSE 8080

# Start nginx
CMD ["nginx", "-g", "daemon off;"]